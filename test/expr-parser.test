*(
42
**
42
*)

*(
true
**
true
*)

*(
"hi"
**
"hi"
*)

*(
"just \"hello\""
**
"just "hello""
*)

*(
'just \'another\' "hello"'
**
"just 'another' "hello""
*)

*(
(42)
**
42
*)

*(
+42
**
(+ 42)
*)

*(
-42
**
(- 42)
*)

*(
!42
**
(! 42)
*)

*(
2 * 3
**
(* 2 3)
*)

*(
2 / -3
**
(/ 2 (- 3))
*)

*(
2 * 3 % 4
**
(% (* 2 3) 4)
*)

*(
2*3 + 4/5
**
(+ (* 2 3) (/ 4 5))
*)

*(
4-+2
**
(- 4 (+ 2))
*)

*(
2 <= 1+4
**
(<= 2 (+ 1 4))
*)

*(
3 >= 4
**
(>= 3 4)
*)

*(
2*3 < 5
**
(< (* 2 3) 5)
*)

*(
2 > 1
**
(> 2 1)
*)

*(
2<3 == true
**
(== (< 2 3) true)
*)

*(
2>3 != false
**
(!= (> 2 3) false)
*)

*(
2>3 && 4
**
(&& (> 2 3) 4)
*)

*(
true && false || 2
**
(|| (&& true false) 2)
*)

*(
2 ? 3 : 4+1
**
(? 2 3 (+ 4 1))
*)

*(
a.f
**
(field f (rv a (base a)))
*)

*(
f
**
(field f (rv *this*))
*)

*(
forall (a in b) a.f
**
(always (field f (rv a (where true (rv b (base b))))) (rv a (where true (rv b (base b)))))
*)

*(
forall (a) a.f
**
(always (field f (rv a (base a))) (rv a (base a)))
*)

*(
$125
**
$125
*)

*(
$
**
$1
*)

*(
a.f1->f2
**
(field f2 (key f1 (rv a (base a))))
*)

*(
f1->f2
**
(field f2 (key f1 (rv *this*)))
*)

*(
a[f1, f2]->[f3, f4]->f5->f6
**
(field f6 (key f5 (key f3 f4 (key f1 f2 (rv a (base a))))))
*)

*(
f1->[f2, f3]->f4
**
(field f4 (key f2 f3 (key f1 (rv *this*))))
*)

*(
[f1, f2]->f3
**
(field f3 (key f1 f2 (rv *this*)))
*)

*(
forsome (x) f1
**
(once (field f1 (rv *this*)) (rv x (base x)))
*)
